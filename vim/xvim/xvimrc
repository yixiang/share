" Case insensitive search is the most common case.
" set ignorecase
set vimregex
set hlsearch

" Make clipboard and default register equivalent
set clipboard=unnamed

" ESC in insert mode
imap ,,  <ESC>:w<CR>
imap ,e  <ESC>

" Write and quit
nmap ,,  :w<CR>
nmap ,w  :w<CR>
nmap ,q  :q<CR>

" insert line and exit inesrt mode
map ,o  o<ESC>
imap ,o  <ESC>o<ESC>
map ,O  O<ESC>
imap ,O  <ESC>O<ESC>

" Copy paste (word copy and word replacement)
map ,a  mzggyG`z
map ,y  vmziwy`z
map ,p  vmziw"0p`z
imap ,y  <ESC>vmziwy`z
imap ,p  <ESC>vmziw"0p`z
vmap ,p  "0p
map ,0 "0p
imap ,0 <ESC>"0p

map ,y  mzlbye`z
map ,p  mzlb"0Plde`z
imap ,y  <ESC>mzlbye`z
imap ,p  <ESC>mzlb"0Plde`z
vmap ,p  "0p
map ,0 "0p
imap ,0 <ESC>"0p

" Build and Run (using m to match vim's make commands)
map ,r  :run<CR>
imap ,r  <ESC>:run<CR>

" Commented to give the ,m short to Jump to Next Counterpart.
map ,mr  :run<CR>
map ,ma  :xcmenucmd Analyze<CR>
map ,mb  :xcmenucmd Build<CR>
map ,mk  :xcmenucmd Clean<CR>
map ,mm  :xcmenucmd Build<CR>
map ,mp  :xcmenucmd Profile<CR>
map ,mt  :xcmenucmd Test<CR>

" Commenting
" Toggle the 
map ,c  :xccmd commentAndUncommentCurrentLines<CR>
imap ,c  <ESC>:xccmd commentAndUncommentCurrentLines<CR>
" Generate a java doc style block comment.
map ,#  O<ESC>0c$/**<CR> * <CR>* @param <CR>* @return <CR>*/<ESC>3kA

" Searching
map ,s   mzviw:xccmd findSelectedTextInWorkspace<CR>`z
vmap ,s  :xccmd findSelectedTextInWorkspace<CR>
imap ,s  <ESC>:xccmd findSelectedTextInWorkspace<CR>
map ,S   :xccmd findSelectedSymbolInWorkspace<CR>
imap ,S  <ESC>:xccmd findSelectedSymbolInWorkspace<CR>

" Navigating
map ,b  :xccmd goBackInHistoryByCommand<CR>
imap ,b  <ESC>:xccmd goBackInHistoryByCommand<CR>
map ,B  :xccmd goForwardInHistoryByCommand<CR>
imap ,B  <ESC>:xccmd goForwardInHistoryByCommand<CR>
" Use keys that matches direction commands that are used by Xcode.
map ,n  :xccmd jumpToNextCounterpart<CR>
imap ,n  <ESC>:xccmd jumpToNextCounterpart<CR>
map ,N  :xccmd jumpToPreviousCounterpart<CR>
imap ,N  <ESC>:xccmd jumpToPreviousCounterpart<CR>
" Issues
map ,j  :xcmenucmd Jump to Next Issue<CR>
imap ,j  <ESC>:xcmenucmd Jump to Next Issue<CR>
map ,J  :xcmenucmd Jump to Previous Issue<CR>
imap ,J  <ESC>:xcmenucmd Jump to Previous Issue<CR>

" View current file in ...
map ,vp  :xccmd revealInProjectNavigator<CR>
map ,vs  :xccmd revealInSymbolNavigator<CR>
map ,vf  :xccmd showInFinder<CR>
map ,vv  :!open -a MacVim %<CR>
map ,vc  :!$HOME/bin/opencs %<CR>

" Clang format, requires https://github.com/XVimProject/XVim to be installed.
" Format current line.
map ,.   mzV:xcmenucmd Format Selected Text<CR>`z
imap ,.   <ESC>mzV:xcmenucmd Format Selected Text<CR>`z
" Format the selected text.
vmap ,.  :xcmenucmd Format Selected Text<CR>
" Format file in focus
map ,=   mzggvG{:xcmenucmd Format Selected Text<CR>`z
imap ,=   <ESC>mzggvG{:xcmenucmd Format Selected Text<CR>`z
" Format current block (enclosed in {...})
map ,;   mzvi{:xcmenucmd Format Selected Text<CR>`z
imap ,;   <ESC>mzvi{:xcmenucmd Format Selected Text<CR>`z

" Help (equivalent to option+click on a symbole).
map ,h  :xhelp<CR>
imap ,h  <ESC>:xhelp<CR>

" Debugging
" map ,k  :xccmd toggleBreakpointAtCurrentLine<CR>
" map ,K  :xccmd toggleBreakpoints<CR>
" map ,j  :xccmd stepOver<CR>
" map ,i  :xccmd stepInto<CR>
" map ,o  :xccmd stepOut<CR>
" map ,t  :xccmd pauseOrContinue<CR>

" go to file
map gf gd

" Edit in All Scope
map ,t  :xccmd toggleTokenizedEditing<CR>

" Open quickly
map  ,<SPACE>  <ESC>:xcmenucmd Open Quickly...<CR>

